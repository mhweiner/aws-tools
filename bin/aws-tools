#!/usr/bin/env node

const yargs = require('yargs');
const chalk = require('chalk');

const { createStack } = require('../dist/createStack');
const { deleteStack } = require('../dist/deleteStack');
const { redeployStack } = require('../dist/redeployStack');
const { updateStack } = require('../dist/updateStack');

const log = console.log;
const error = (msg) => log(chalk.red(`Error: ${msg}`));

yargs
  .command(
    'create-stack <stackName> <templateFile> <paramsFile>',
    'Create a CloudFormation stack',
    (yargs) => {
      yargs.positional('stackName', { type: 'string', describe: 'Stack name' });
      yargs.positional('templateFile', { type: 'string', describe: 'CloudFormation template file' });
      yargs.positional('paramsFile', { type: 'string', describe: 'Parameter file' });
    },
    ({ stackName, templateFile, paramsFile }) => {
      log(chalk.green(`Creating stack: ${stackName}...`));
      createStack(stackName, templateFile, paramsFile);
    }
  )
  .command(
    'delete-stack <stackName> <repeatStackName>',
    'Delete a CloudFormation stack',
    (yargs) => {
      yargs.positional('stackName', { type: 'string', describe: 'Stack name' });
      yargs.positional('repeatStackName', { type: 'string', describe: 'Repeat stack name to confirm deletion' });
    },
    ({ stackName, repeatStackName }) => {
      log(chalk.yellow(`Deleting stack: ${stackName}...`));
      deleteStack(stackName, repeatStackName);
    }
  )
  .command(
    'redeploy-stack <stackName> <templateFile> <paramsFile>',
    'Redeploy a CloudFormation stack',
    (yargs) => {
      yargs.positional('stackName', { type: 'string', describe: 'Stack name' });
      yargs.positional('templateFile', { type: 'string', describe: 'CloudFormation template file' });
      yargs.positional('paramsFile', { type: 'string', describe: 'Parameter file' });
    },
    ({ stackName, templateFile, paramsFile }) => {
      log(chalk.blue(`Redeploying stack: ${stackName}...`));
      redeployStack(stackName, templateFile, paramsFile);
    }
  )
  .command(
    'update-stack <stackName> <templateFile> <paramsFile>',
    'Update a CloudFormation stack',
    (yargs) => {
      yargs.positional('stackName', { type: 'string', describe: 'Stack name' });
      yargs.positional('templateFile', { type: 'string', describe: 'CloudFormation template file' });
      yargs.positional('paramsFile', { type: 'string', describe: 'Parameter file' });
    },
    ({ stackName, templateFile, paramsFile }) => {
      log(chalk.cyan(`Updating stack: ${stackName}...`));
      updateStack(stackName, templateFile, paramsFile);
    }
  )
  .demandCommand(1, chalk.red('You must provide a valid command. Use --help for more information.'))
  .help()
  .alias('h', 'help')
  .version('1.0.0')
  .argv;